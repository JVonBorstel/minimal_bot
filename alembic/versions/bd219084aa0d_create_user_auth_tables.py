"""create_user_auth_tables

Revision ID: bd219084aa0d
Revises: 
Create Date: 2025-05-20 10:41:14.507642

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bd219084aa0d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


USER_PROFILES_TABLE_NAME = "user_auth_profiles"

def upgrade() -> None:
    """Upgrade schema."""
    op.create_table(
        USER_PROFILES_TABLE_NAME,
        sa.Column('user_id', sa.String(), nullable=False, primary_key=True),
        sa.Column('display_name', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('aad_object_id', sa.String(), nullable=True),
        sa.Column('tenant_id', sa.String(), nullable=True),
        sa.Column('assigned_role', sa.String(), nullable=False, server_default='DEFAULT'),
        sa.Column('first_seen_timestamp', sa.Integer(), nullable=False),
        sa.Column('last_active_timestamp', sa.Integer(), nullable=False),
        sa.Column('profile_data', sa.Text(), nullable=True),
        sa.Column('profile_version', sa.Integer(), nullable=False, server_default=sa.text('1'))
    )
    op.create_index(op.f('ix_user_auth_profiles_user_id'), USER_PROFILES_TABLE_NAME, ['user_id'], unique=False)
    op.create_index(op.f('ix_user_auth_profiles_email'), USER_PROFILES_TABLE_NAME, ['email'], unique=False)
    op.create_index(op.f('ix_user_auth_profiles_aad_object_id'), USER_PROFILES_TABLE_NAME, ['aad_object_id'], unique=False)
    op.create_index(op.f('ix_user_auth_profiles_assigned_role'), USER_PROFILES_TABLE_NAME, ['assigned_role'], unique=False)
    # Note: The explicit index names idx_user_email etc. from the ORM model are not directly used here.
    # Alembic's op.create_index with op.f() creates names like ix_user_auth_profiles_email.
    # If specific names are crucial and differ from this pattern, direct naming can be used, e.g.:
    # op.create_index('idx_user_email', USER_PROFILES_TABLE_NAME, ['email'], unique=False)
    # For now, using op.f() is standard for autogenerated-like index names.

def downgrade() -> None:
    """Downgrade schema."""
    op.drop_index(op.f('ix_user_auth_profiles_assigned_role'), table_name=USER_PROFILES_TABLE_NAME)
    op.drop_index(op.f('ix_user_auth_profiles_aad_object_id'), table_name=USER_PROFILES_TABLE_NAME)
    op.drop_index(op.f('ix_user_auth_profiles_email'), table_name=USER_PROFILES_TABLE_NAME)
    op.drop_index(op.f('ix_user_auth_profiles_user_id'), table_name=USER_PROFILES_TABLE_NAME)
    op.drop_table(USER_PROFILES_TABLE_NAME)
